# ================================
# URL Shortener Backend Configuration
# ================================

# ================================
# Environment Settings
# ================================
# Set to 'production' for live deployment, 'development' for local development
NODE_ENV=production

# ================================
# Server Configuration
# ================================
# Port for the application to listen on
# Most cloud providers set this automatically (Heroku, Railway, etc.)
PORT=3000

# ================================
# Database Configuration (MySQL)
# ================================
# Database name - create this database in your MySQL server
DB_NAME=urlshortner

# Database user with appropriate permissions
DB_USER=your_database_user

# Strong database password - use a secure password generator
DB_PASSWORD=your_secure_database_password

# Database host
# For local development: localhost
# For cloud databases: use the provided host URL (e.g., AWS RDS, PlanetScale, etc.)
DB_HOST=localhost

# Database port (default MySQL port is 3306)
DB_PORT=3306

# Database dialect (keep as mysql for MySQL databases)
DB_DIALECT=mysql

# ================================
# Security Settings (Optional)
# ================================
# JWT Secret for authentication (if implementing user auth)
# JWT_SECRET=your_super_secret_jwt_key_here

# CORS origins (comma-separated list of allowed origins)
# CORS_ORIGIN=https://yourdomain.com,https://www.yourdomain.com

# ================================
# Production Deployment Notes
# ================================
# 1. Create a new database on your hosting provider
# 2. Update DB_HOST, DB_USER, DB_PASSWORD with production values
# 3. Set NODE_ENV=production
# 4. For cloud deployment, PORT is usually set automatically
# 5. Use environment variables in your hosting platform (not this file)
# 6. Ensure your database allows connections from your server's IP
# 7. Consider using connection pooling for better performance

# ================================
# Common Cloud Database Providers
# ================================
# AWS RDS: Use the RDS endpoint as DB_HOST
# PlanetScale: Use the provided connection details
# Railway MySQL: Use the provided DATABASE_URL or individual variables
# Digital Ocean Managed Database: Use the provided connection details